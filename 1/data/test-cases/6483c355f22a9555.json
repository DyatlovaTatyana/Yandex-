{"uid":"6483c355f22a9555","name":"test_case3[ ]","fullName":"main_test#test_case3","historyId":"e12790523ba759a8ba63e57a453d27cb","time":{"start":1725134851197,"stop":1725134851624,"duration":427},"status":"failed","statusMessage":"AssertionError: assert ' ' == '3955de07-1c7...-6ead5d5dc5b3'\n  \n  Strings contain only whitespace, escaping them using repr()\n  - '3955de07-1c77-458e-9f5a-6ead5d5dc5b3'\n  + ' '","statusTrace":"base_url_org = 'https://search-maps.yandex.ru/v1/', test_data = ' '\n\n    @pytest.mark.parametrize(\"test_data\", [\"a796ba84-f8b6-4da5-816d-cdf84abe973f\", \"3955de07-1c77-458e-9f5a-6ead5d5dc5b3\", \" \"])\n    def test_case3(base_url_org, test_data):\n    #проверка через марку разных вариантов ключей (верный, неверный, пустой)\n        query_params_org = {\n        \"apikey\": test_data,\n        \"text\": \"кафе\",\n        \"lang\": \"ru_RU\",\n        \"ll\": \"30.360909,59.931058\",\n        \"spn\": \"0.01,0.01\",\n        \"type\": \"biz\",\n        \"results\":\"5\"\n        }\n    \n        response5 = requests.get(base_url_org, params=query_params_org)\n>       assert test_data == \"3955de07-1c77-458e-9f5a-6ead5d5dc5b3\"\nE       AssertionError: assert ' ' == '3955de07-1c7...-6ead5d5dc5b3'\nE         \nE         Strings contain only whitespace, escaping them using repr()\nE         - '3955de07-1c77-458e-9f5a-6ead5d5dc5b3'\nE         + ' '\n\nmain_test.py:71: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1725134847199,"stop":1725134848094,"duration":895},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"api_key_geocod","time":{"start":1725134847199,"stop":1725134847199,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url_geocod","time":{"start":1725134847199,"stop":1725134847199,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url_org","time":{"start":1725134848094,"stop":1725134848094,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[],"labels":[{"name":"suite","value":"main_test"},{"name":"host","value":"fv-az1117-954"},{"name":"thread","value":"2090-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"main_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"test_data","value":"' '"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"6483c355f22a9555.json","parameterValues":["' '"]}